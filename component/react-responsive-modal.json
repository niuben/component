{"git":"https://github.com/pradel/react-responsive-modal","version":"2.0.1","description":"基于React的自适应弹出框","browser":"../../lib/site/static/img/browser/ie10.png","type":3,"url":"https://github.com/pradel/react-responsive-modal","name":"react-responsive-modal","markdown":"<h1 id=\"react-responsive-modal\">react-responsive-modal</h1>\n<p><a href=\"https://badge.fury.io/js/react-responsive-modal\"><img src=\"https://badge.fury.io/js/react-responsive-modal.svg\" alt=\"npm version\"></a>\n<a href=\"https://www.npmjs.com/package/react-responsive-modal\"><img src=\"https://img.shields.io/npm/dm/react-responsive-modal.svg\" alt=\"npm\"></a>\n<a href=\"https://travis-ci.org/pradel/react-responsive-modal\"><img src=\"https://travis-ci.org/pradel/react-responsive-modal.svg?branch=master\" alt=\"Build Status\"></a>\n<a href=\"https://david-dm.org/pradel/react-responsive-modal\"><img src=\"https://david-dm.org/pradel/react-responsive-modal/status.svg\" alt=\"dependencies Status\"></a></p>\n<p>A simple responsive react modal compatible with React 15 and 16.</p>\n<ul>\n<li>Centered modals.</li>\n<li>Scrolling modals.</li>\n<li>Multiple modals.</li>\n<li>Easily customizable via props.</li>\n</ul>\n<h2 id=\"demo\">Demo</h2>\n<p>You can find a demo <a href=\"https://react-responsive-modal.leopradel.com/\">here</a>.</p>\n<h2 id=\"examples\">Examples</h2>\n<p><a href=\"https://react-responsive-modal.leopradel.com/#example\">https://react-responsive-modal.leopradel.com/#example</a></p>\n<h2 id=\"installation\">Installation</h2>\n<p>With npm: <code>npm install react-responsive-modal --save</code></p>\n<p>Or with yarn: <code>yarn add react-responsive-modal</code></p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://codesandbox.io/s/9jxp669j2o\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit react-responsive-modal\"></a></p>\n<pre><code class=\"lang-javascript\">import React from &#39;react&#39;;\nimport ReactDOM from &#39;react-dom&#39;;\nimport Modal from &#39;react-responsive-modal&#39;;\n\nexport default class App extends React.Component {\n  state = {\n    open: false,\n  };\n\n  onOpenModal = () =&gt; {\n    this.setState({ open: true });\n  };\n\n  onCloseModal = () =&gt; {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      &lt;div&gt;\n        &lt;button onClick={this.onOpenModal}&gt;Open modal&lt;/button&gt;\n        &lt;Modal open={open} onClose={this.onCloseModal} little&gt;\n          &lt;h2&gt;Simple centered modal&lt;/h2&gt;\n        &lt;/Modal&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n\nReactDOM.render(&lt;App /&gt;, document.getElementById(&#39;app&#39;));\n</code></pre>\n<h3 id=\"usage-with-css\">Usage with css</h3>\n<p>By default react-responsive-modal is using\n<a href=\"https://github.com/cssinjs/react-jss\">react-jss</a>.</p>\n<p>If you don&#39;t want to add it to your project you can use the css version of this\nproject:</p>\n<pre><code class=\"lang-javascript\">// Import the css file\nimport &#39;react-responsive-modal/lib/react-responsive-modal.css&#39;;\nimport Modal from &#39;react-responsive-modal/lib/css&#39;;\n</code></pre>\n<h2 id=\"props\">Props</h2>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th style=\"text-align:center\">Type</th>\n<th style=\"text-align:center\">Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>open*</strong></td>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\"></td>\n<td>Control if the modal is open or not.</td>\n</tr>\n<tr>\n<td><strong>onClose*</strong></td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:center\"></td>\n<td>Fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.</td>\n</tr>\n<tr>\n<td>children</td>\n<td style=\"text-align:center\">Node</td>\n<td style=\"text-align:center\"></td>\n<td>The content of the modal.</td>\n</tr>\n<tr>\n<td>closeOnEsc</td>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\">true</td>\n<td>Is the modal closable when user press esc key.</td>\n</tr>\n<tr>\n<td>closeOnOverlayClick</td>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\">true</td>\n<td>Is the modal closable when user click on overlay.</td>\n</tr>\n<tr>\n<td>little</td>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\">false</td>\n<td>Is the dialog centered (<strong>when you don&#39;t have a lot of content</strong>).</td>\n</tr>\n<tr>\n<td>showCloseIcon</td>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\">true</td>\n<td>Show the close icon.</td>\n</tr>\n<tr>\n<td>closeIconSize</td>\n<td style=\"text-align:center\">Number</td>\n<td style=\"text-align:center\">28</td>\n<td>Close icon size.</td>\n</tr>\n<tr>\n<td>closeIconSvgPath</td>\n<td style=\"text-align:center\">Node</td>\n<td style=\"text-align:center\"></td>\n<td>A valid svg path to show as icon.</td>\n</tr>\n<tr>\n<td>classNames</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:center\">{}</td>\n<td>An object containing classNames to style the modal, can have properties &#39;overlay&#39; (classname for overlay div), &#39;modal&#39; (classname for modal content div), &#39;closeIcon&#39; (classname for close icon svg). You can customize the transition with &#39;transitionEnter&#39;, &#39;transitionEnterActive&#39;, &#39;transitionExit&#39;, &#39;transitionExitActive&#39;</td>\n</tr>\n<tr>\n<td>styles</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:center\">{}</td>\n<td>An object containing the styles objects to style the modal, can have properties &#39;overlay&#39;, &#39;modal&#39;, &#39;closeIcon&#39;.</td>\n</tr>\n<tr>\n<td>animationDuration</td>\n<td style=\"text-align:center\">Number</td>\n<td style=\"text-align:center\">500</td>\n<td>Animation duration in milliseconds.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"license\">License</h2>\n<p>MIT © <a href=\"https://www.leopradel.com/\">Léo Pradel</a></p>\n","static":"../../lib/site/dist"}