var modules= {"component":[{"id":"1","name":"range-select","file":{"./lib/index.js":"import React from \"react\";\nimport \"./index.scss\";\n\n// 给Date对象添加getYMD方法，获取字符串形式的年月日\nDate.prototype.getYMD = function() {\n    var retDate = this.getFullYear() + \"-\", // 获取年份。\n        month = this.getMonth() + 1,\n        day  = this.getDate();\n\n    if(month < 10) {\n        month = \"0\" + month;\n    }\n\n    if(day < 10) {\n        day = \"0\" + day;\n    }\n    \n    retDate += month + \"-\"; // 获取月份。\n    retDate += day; // 获取日。\n    return retDate; // 返回日期。\n  };\n  \n  // 给String对象添加getDate方法，使字符串形式的日期返回为Date型的日期\n  String.prototype.getDate = function() {\n    var strArr = this.split(\"-\");\n    var date = new Date(strArr[0], strArr[1] - 1, strArr[2]);\n    return date;\n  };\n  \nexport default class Range extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          start: {\n              value: null,\n              list: []\n          },\n          end: {\n              value: null,\n              list: []\n          },\n          title: this.props.title ? this.props.title : null\n      };  \n    }\n    componentWillMount() {\n      var dateArr = this.getPrevMonth();\n      var startList = this.getDays(dateArr[0], dateArr[1]);\n      var endList = this.getDays(dateArr[0], dateArr[1]);\n\n      var {start, end} = this.state;\n      start.list = startList;\n      start.value = dateArr[0];\n      end.list = endList.reverse();\n      end.value = dateArr[1];\n  \n      this.forceUpdate();\n    }\n    getPrevMonth() {\n      var startDate = new Date(),            \n          startMonth = startDate.getMonth() - 1,\n          startDay = startDate.getDate() - 1;\n      if(startMonth == -1) {\n          startDate.setFullYear(startDate.getFullYear()-1);\n          startMonth = 11;    \n      }\n      startDate.setMonth(startMonth);\n      startDate.setDate(startDay);\n      \n      var endDate = new Date(),\n          endDay = endDate.getDate() - 1;\n        endDate.setDate(endDay);\n\n      return [startDate.getYMD(), endDate.getYMD()];\n    }\n    getDays(day1, day2) {\n      // 获取入参字符串形式日期的Date型日期\n      var d1 = day1.getDate();\n      var d2 = day2.getDate();\n  \n      // 定义一天的毫秒数\n      var dayMilliSeconds = 1000 * 60 * 60 * 24;\n  \n      // 获取输入日期的毫秒数\n      var d1Ms = d1.getTime();\n      var d2Ms = d2.getTime();\n  \n      // 定义返回值\n      var ret;\n  \n      // 时间列表\n      var list = [];\n  \n      // 对日期毫秒数进行循环比较，直到d1Ms 大于等于 d2Ms 时退出循环\n      // 每次循环结束，给d1Ms 增加一天\n      for (d1Ms; d1Ms <= d2Ms; d1Ms += dayMilliSeconds) {\n        var day = new Date(d1Ms);\n        // 获取其年月日形式的字符串\n        list.push(day.getYMD());\n      }\n      return list;\n    }    \n    changeHandle(){\n        this.props.onChange && this.props.onChange([this.state.start.value, this.state.end.value]);\n    }\n    render(){\n        var {start, end} = this.state;\n        return <div className=\"rangebar clearfix\" style={this.props.style ? this.props.style : null}>\n            <div className=\"daytit\">{this.state.title != null ?  this.state.title : \"请选择时间范围\"} </div>\n            <div className=\"month\">\n                <div className=\"tit\"><span>{start.value}</span></div>\n                <ul className=\"drop-down\">\n                {\n                    start.list.map((item,index)=>{\n                        return <li key={index} onClick={(e)=>{\n                            var date = e.target.innerHTML;\n                            start.value = date;\n                            this.forceUpdate();\n                            this.changeHandle()\n                        }}>{item}</li>\n                    })\n                }\n                </ul>\n            </div>\n            <div className=\"to\">至</div>\n                <div className=\"month\">\n                    <div className=\"tit\"><span>{end.value}</span></div>\n                    <ul className=\"drop-down\">\n                    {\n                        end.list.map((item, index)=>{\n                            return <li key={index} onClick={(e)=>{\n                                var date = e.target.innerHTML;\n                                end.value = date;\n                                this.forceUpdate();\n                                this.changeHandle()\n                            }}>{item}</li>\n                        })\n                    }\n                    </ul>\n                </div>\n            <div className=\"prompt\">{this.props.tips || \"时间范围为最近1个月\"}</div>\n        </div>\n    }    \n}","readme":"## 时间范围选择（下拉框）\n通过两个下拉框选择时间\n\n### 场景\n在一个固定时间段内选择开始时间和结束时间；\n\n\n### API\n| 属性名 | 说明 | 类型 | 默认值 |\n| ------| ------ | ------ | ----- |\n|title|标题|string|请选择时间范围|\n|tips|时间范围说明|string|请选择最近一个月|\n\n### 演示代码\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport RangeSelect from \"./lib/index.js\";\n\nrender(<RangeSelect />, document.getElementById('root'));\n```","./index.scss":".rangebar {\n    margin-bottom: 10px;\n    height: 36px;\n    line-height: 36px;\n    font-size: 14px;\n    color: #333;\n    .monthtit {\n        float: left;\n        width: 85px;\n        text-align: right;\n    }\n    .month {\n        position: relative;\n        float: left;\n        width: 148px;\n        height: 34px;\n        line-height: 34px;\n        border: 1px solid #dcdcdc;\n        border-radius: 2px;\n        cursor: pointer;\n        background-color: #fff;\n        .tit {\n            margin: 9px auto 0;\n            width: 129px;\n            height: 16px;\n            line-height: 16px;\n            // border-left: 1px solid transparent;\n            background: url(./selbg.jpg) right center no-repeat;\n            // span {\n            //     display: inline-block;\n            //     width: 50px;\n            // }\n        }\n        .drop-down {\n            display: none;\n            position: absolute;\n            top: 34px;\n            left: -1px;\n            width: 148px;\n            max-height: 138px;\n            border: 1px solid #3697fd;\n            border-radius: 0 0 2px 2px;\n            background-color: #fff;\n            z-index: 10;\n            overflow: auto;\n            li {\n                padding-left: 10px;\n                height: 30px;\n                line-height: 30px;\n                &:hover {\n                    color: #fff;\n                    background-color: #3697fd;\n                }\n            }\n        }\n        &:hover {\n            border-color: #3697fd;\n            border-radius: 2px 2px 0 0;\n            .drop-down {\n                display: block;\n            }\n            // .tit {\n            //     border-left: 1px solid #999;\n            //     span {\n            //         display: none\n            //     }\n            // }\n        }\n    }\n    .daytit {\n        float: left;\n        margin: 0 9px 0px 0px;\n        width: auto !important;\n    }\n    .to {\n        float: left;\n        width: 30px;\n        text-align: center;\n    }\n    .prompt {\n        float: left;\n        padding-left: 10px;\n        width: 135px;\n        color: #999;\n    }\n}"}}]}