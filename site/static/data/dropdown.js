var modules= {
  "component": [
    {
      "id": "1",
      "name": "dropdown",
      "file": {
        "./lib/index.js": "import React from \"react\";\nimport \"./index.scss\";\nexport default class Dropdown extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            visiable: false,\n            infor:  this.props.infor,            \n        }        \n    }\n    componentDidMount(){\n        document.onclick = (e)=>{\n            if(this.state.visiable == true){\n                this.state.visiable = false;\n                this.forceUpdate();\n            }\n        }\n    }\n    render() {\n        var styleObj = {};\n        if(this.props.width) {\n            styleObj = {\n                width: this.props.width\n            }\n        }\n        return (\n            <div className=\"dropdown\" style={styleObj}>\n                <div className=\"dropbtn\" onClick={(e)=>{\n                    e.stopPropagation();\n                    e.nativeEvent.stopImmediatePropagation();\n                    this.state.visiable = true;\n                    this.forceUpdate();    \n                }}>{this.state.infor.title}</div>\n                {\n                    <div className={this.state.visiable == false ? \"dropdown-content\" : \"dropdown-content active\"} >\n                        {\n                            this.state.infor.list.map((item, index)=>{\n                                return <a href=\"javascript:void(0)\" className={this.state.infor.value == item.value ? \"active\" : null} key={index} onClick={(e)=>{\n                                    this.state.infor.title = item.name;\n                                    this.state.infor.value = item.value;\n                                    this.props.onChange && this.props.onChange(this.state.infor.value);\n                                    this.state.visiable = false;\n                                    this.forceUpdate();\n                                }}>{item.name}</a>\n                            })\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}",
        "readme": "## 下拉框\n向下弹出一个列表\n\n### 场景\n有多个选项选择且没有过多的空间全部展示出来, 一般使用表单情况下。\n\n### 安装\n```\n    npm install sogo-dropdown\n    // yarn add sogo-dropdown\n```\n\n### API\n| 属性名 | 说明 | 类型 | 默认值 |\n| ------| ------ | ------ | ----- |\n|title| 标题 |string|请选择|\n|list|下拉框展示的内容|Array Object|[]|\n\n### 事例代码\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Dropdown from \"./lib/index.js\";\n\nrender(<Dropdown infor={{\n    title: \"学生列表\",\n    list: [\n        { name: \"张三\", value: 1 },\n        { name: \"李四\", value: 2 },\n        { name: \"王五\", value: 3 }\n    ]\n }}/>, document.getElementById('root'));\n```",
        "/.js": ""
      }
    }
  ]
}